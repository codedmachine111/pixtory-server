model Posts {
  id        Int      @id @default(autoincrement())
  title     String
  postText  String  @db.VarChar(250)
  username  String
  userId    Int
  users      Users     @relation(fields: [userId], references: [id])
  Comments  Comments[]
  Likes     Likes[]
  Images    Images[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
  
model Comments {
  id        Int      @id @default(autoincrement())
  commentText   String
  username    String  
  postId    Int
  post      Posts     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
  
model Likes {
  id        Int      @id @default(autoincrement())
  postId    Int
  post      Posts     @relation(fields: [postId], references: [id])
  userId    Int
  users     Users     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

  
model Images {
  id        Int      @id @default(autoincrement())
  imgData   Bytes
  postId    Int
  post      Posts     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
  
model Users {
id        Int      @id @default(autoincrement())
username  String    @unique
password  String
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
Posts     Posts[]
Likes     Likes[]
}
  
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}